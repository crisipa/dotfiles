# 关闭核心转储
# kernel.core_pattern=|/bin/false

# Restrict dmesg access to root
kernel.dmesg_restrict = 1

# 禁止替换正在运行的内核
kernel.kexec_load_disabled = 1

# 限制访问 proc 文件系统中的内核指针
# 1 将针对没有 CAP_SYSLOG 的普通用户隐藏 /proc/kallsyms 中的内核符号地址
# 2 将隐藏 /proc/kallsyms 中的内核符号地址，而忽略用户的权限
kernel.kptr_restrict = 2

# NMI（不可屏蔽中断）看门狗是一个调试特性，用于捕捉导致内核 panic 的硬件中断。
# 在某些系统上，它会产生大量的中断，导致用电量明显增加
kernel.nmi_watchdog = 0

# 决定在 kernel panic 时的重启策略
# <0 立即重新启动
# 0  不重新启动
# >0 秒后重新启动
kernel.panic = 10

# Restrict access to kernel performance events
# -1  无限制
# >=0 ftrace 需要 CAP_PERFMON
# >=1 CPU event 需要 CAP_PERFMON
# >=2 * 需要 CAP_PERFMON
kernel.perf_event_paranoid = 2

# 启用神奇的 SysRq 键
#   0 = 完全禁用 sysrq
#   1 = 启用 sysrq 的所有功能
#  >1 = 允许的 sysrq 函数的位掩码
#   2 =   0x2 - enable control of console logging level
#   4 =   0x4 - enable control of keyboard (SAK, unraw)
#   8 =   0x8 - enable debugging dumps of processes etc.
#  16 =  0x10 - enable sync command
#  32 =  0x20 - enable remount read-only
#  64 =  0x40 - enable signalling of processes (term, kill, oom-kill)
# 128 =  0x80 - allow reboot/poweroff
# 256 = 0x100 - allow nicing of all RT tasks
kernel.sysrq = 244

# 0 启用"bpf()"非特权调用
# 1 非特权呼叫 "bpf()" 被禁用而不恢复
# 2 禁用非特权呼叫 "bpf()"
# kernel.unprivileged_bpf_disabled = 0
kernel.unprivileged_bpf_disabled = 2

# 是否允许普通用户运行非特权容器
# kernel.unprivileged_userns_clone = 0

# Restrict access to the ptrace() syscall
# 1 restricted
# 2 admin-only
# 3 no ptrace possible
kernel.yama.ptrace_scope = 3
