# 修改自 https://github.com/hooke007/MPV_lazy

### 文档 https://github.com/hooke007/MPV_lazy/blob/main/portable_config/mpv.conf

## 外置配置文件

# 输入 UOSC
input-conf = "~~/input_uosc.conf"

# 预设
include = "~~/profiles.conf"

# 脚本设置 内置
include = "~~/script-opts.conf"

# 日志 DEBUG 用
# log-file = "~~/mpv.log"

### 基础

# <gpu|gpu-next> 视频输出驱动。许多渲染相关的选项也只能在这两项下正常工作。当前版本首选gpu
# gpu最高普适性和完成度；gpu-next查看此处讨论 https://github.com/hooke007/MPV_lazy/discussions/39
vo = gpu

# 图形 API 选择
# auto 默认 使用任何可用的 API
# opengl 需要 OpenGL 2.1+ 或 GLES 2.0+
# vulkan 需要有效/工作的--spirv-compiler
# d3d11 仅win
# gpu-api = auto

# 选择图形输出后端，默认 auto（此项的值与 --gpu-api=<opengl|d3d11|vulkan> 相对应）
# 非特殊情况下Win&NV用户应使用d3d11。vulkan可能的10bit问题 https://github.com/mpv-player/mpv/issues/8554
# auto (autodetect)
# gpu-api = opengl
# wayland | x11egl | x11 | drm
# gpu-api = vulkan
# waylandvk | x11vk | displayvk
# win
# win | d3d11 | winvk
# gpu-context = wayland

# 指定应使用的硬件视频解码API
# 默认值 no 为软解
# yes | auto 纯硬解
# 纯硬解对大多数人来说都是高效省电的选项
# 但不支持大量的滤镜和部分mpv选项
# auto-safe 类似于 auto
# 但只允许列入白名单的方法，这被认为是“安全的”
# auto-copy 弥补了纯硬解的不足，是相对的功耗均衡选项
# 它仅选择将解码后的视频数据复制回系统内存的方法
# auto-copy-safe 类似于 auto-copy
# 但只允许列入白名单的方法，这被认为是“安全的”
# *-copy 的解码方式意味着需要更好的内存显存带宽性能
# 大多数非复制方法仅适用于 opengl GPU 后端
# 现在 只有 vaapi | nvdec | vulkan 方法适用于 vulkan GPU 后端
# 它可以是多个值组成的优先级列表
# 例如值 vulkan-copy,nvdec-copy,dxva2-copy 表示依次尝试这些解码模式
# 自动选择 安全
# auto-safe,auto-copy-safe
# 自动选择
# auto,auto-copy
# 积极维护的硬件视频解码API
# 不需要 vo 参数
# vulkan-copy,vaapi-copy,nvdec-copy
# 需要 vo=gpu
# vaapi,nvdec
# 需要 vo=gpu-next
# vulkan
# 仅 windows
# d3d11va-copy
# 需要 vo=gpu gpu-context=d3d11
# d3d11va
# 设置为 自动选择 安全
# hwdec = auto-safe,auto-copy-safe
# hwdec = auto-copy-safe
# 手动
hwdec = vulkan-copy,vaapi-copy
# hwdec = vaapi-copy
# vulkan 使用的设备
# vulkan-device = "AMD Radeon Graphics (RADV REMBRANDT)"
# vaapi 使用的设备
# vaapi-devic = "AMD Radeon Graphics (RADV REMBRANDT)"
# 对限定范围内的编码尝试硬解，特殊值 all 即任意格式都尝试硬解，当前版本默认值 h264,vc1,hevc,vp8,vp9,av1,prores
# hwdec-codecs = all
# hwdec-codecs = "h264,vc1,hevc,vp8,vp9,av1,prores"

# <默认auto|yes|no> 是否直接解码到显存，个别低端英特尔处理器可能需要显式禁用此功能以大幅提速解码
# vd-lavc-dr = auto

### 功能

# <yes|默认no|once> 是否空闲待机（中止播放或所有文件播放后依旧保持mpv运行）
# idle = yes

# 是否使用mpv初始的快捷键（禁用则只使用 input.conf 中的设定），默认 yes
# input-builtin-bindings = yes
# 类似上一项，但也涉及mpv脚本中预设的弱绑定键位，默认 yes
# input-default-bindings = yes

# 是否以暂停状态启动播放器，默认 no
# pause = no

# <inf|默认no> 是否循环播放当前文件
# loop = no

# <inf|force|默认no> 播放列表循环。值 force 会强制播放列表中标记为失效的条目而不是跳过它
loop-playlist = inf

# [补帧时推荐设置为no] 跳转时允许丢帧，默认 yes 。禁用它利于修正音频延迟
hr-seek-framedrop = no

# 退出时记住播放状态，默认 no
save-position-on-quit = yes

# [补帧时注意避免记录值 vf ] 稍后观看的属性白名单。示例即默认值
# 推荐精简为 start,aid,vid,sid 以避免与你的核心设置冲突
# 当 --save-position-on-quit=yes 或使用退出时保存到稍后观看的功能时，如果不使用白名单，滤镜列表、音量、速率等其它状态也会被保存并在下次启动时恢复
watch-later-options = start,vid,aid,sid
  
## 窗口相关
# --fs 等效 --fullscreen。运行MPV自动进入全屏，默认 no
# fs = no

# <yes|默认no|always> 默认为播完列表不暂停，值为 yes 播完列表暂停，值为 always 时每个文件播完都暂停
# keep-open = no

# 窗口置顶（当 --gpu-api=vulkan 时附带全屏独占的功能），默认 no。可选择性的启用配置预设 ontop_playback
# ontop = no

# 是否显示WINDOWS的窗口装饰（边框），默认 yes
# title-bar = yes

# <默认yes|no> 是否允许自动调节窗口大小
# 如果使用这项参数将无效化以下选项 --autofit --autofit-larger --autofit-smaller --window-scale
# auto-window-resize = yes
# 窗口自由拉伸（no）还是按比例拉伸（默认 yes）
# keepaspect-window = yes

# <默认yes|no> 是否执行HIDPI缩放（推荐禁用，原因是会影响 --window-scale 的数值）
# hidpi-window-scale = no

## 缓存相关

# 播放网络视频时的向后缓存大小（KiB或MiB），默认 150MiB
demuxer-max-bytes = 64MiB
# 播放网络视频时的向前缓存大小（KiB或MiB）
demuxer-max-back-bytes= 64MiB
# 缓存秒数 单位：秒
# cache-secs = 60

# 是否在本地存储GLSL着色器的编译缓存，可以提高启动性能，默认 yes
# gpu-shader-cache = yes
# 指定GLSL着色器的编译缓存目录（例值 "~~/_cache/shader"），Windows平台便携式设置下的默认实际为 "~~/cache"
# gpu-shader-cache-dir =

# 稍后观看功能的缓存目录，其中的文件记录 --watch-later-options 指定的项。WIN平台默认为 "~~/watch_later"
# watch-later-dir =

### OSD
# OSD 即 On-Screen-Display ，通常为屏幕上弹出显示的信息。
# OSC 即 on-screen-controller ，MPV中指的是简易操控界面

# <no|默认bar|msg|msg-bar> 在跳转时间轴时显示的信息类型（全局）
osd-on-seek = bar
# 设置（全局）OSD文本信息的持续时间（毫秒），默认 1000
# osd-duration = 1000
# OSD 字体，默认 sans-serif
# osd-font = "sans-serif"
# 更改OSD字体大小（全局，影响多个功能显示的文本），默认 55
osd-font-size = 55
# 每个文件开始播放时短暂显示的信息。默认为空，例值（显示文件名） "${filename}"
# osd-playing-msg = 
# --osd-playing-msg 文本的持续时间，默认（0）即使用全局OSD文本持续时间
# osd-playing-msg-duration = 0
# <-1-1> bar 的垂直位置，默认 0.5
# osd-bar-align-y = 0.5
# <1-100> bar 的宽度，以画面的百分比为单位，默认 75
# osd-bar-w = 75
# <0.1-50> bar 的高度，以画面的百分比为单位，默认 3.125
# osd-bar-h = 3.125
# <0-20.0> 高斯模糊系数，默认 0
# osd-blur = 0
# <格式为(AA)RRGGBB> OSD 边框颜色
# osd-border-color = "#FF000000"
# OSD 边框尺寸，默认 3
# osd-border-size = 3
# <格式为(AA)RRGGBB> OSD 颜色
# osd-color = "#FFFFFFFF"
# 以秒为单位显示OSD时间（毫秒精度），有助于查看视频帧的确切时间戳，默认 no
# osd-fractions = no

### 音频

# 指定音频输出驱动程序的优先级列表。win10优先使用wasapi，其它可用的有openal和sdl
# ao =

# 此项用于指定启动时的音频输出设备，默认 auto 。改具体值示例 "wasapi/{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}"
# 设备名的获取方式参见 维基的FAQ 或 https://mpv.io/manual/master/#options-audio-device
# 同一设备ID可能受其它因素发生变化，该情况下参见上一条说明改用名词指定，示例 "wasapi/扬声器 (Realtek(R) Audio)" 
# audio-device = auto

# 音频通道独占（如果有其他软件先独占音频通道后，再打开MPV可能会画面会卡顿），默认 no
audio-exclusive = no

# 指定声道布局，默认 auto-safe
# 特殊值 stereo 强制多声道音源下混为双声道输出（避免可能的7.1/5.1→2.0声音丢失和音量过小）
# audio-channels = auto-safe

# 变速播放时的音调修正，默认 yes
# audio-pitch-correction = yes

# 音轨首选语言，但MPV优先加载外挂轨道，此项参数可能实际用处不大。
# 默认为空，特殊值可为 auto （尝试匹配系统语言），例值（优选中文） chs,sc,zh,chi,zho
# alang = chs,zh

# <默认no|exact|fuzzy|all> 自动加载同名外挂音轨（fuzzy为模糊名，exact为精确名）
audio-file-auto = fuzzy

### 视频

## 色彩管理
# 如果不具备该领域丰富的知识体系，不建议触碰此处的内容。如果只想避免广色域屏过饱和的问题而不在乎色彩精确性，可尝试修改 --target-prim

# 自动校色，默认 no
# 如果做过专业校色应开启（系统目录存在对应的icm档）。未做校色的广色域屏推荐手动指定 --target-prim
# icc-profile-auto = no
# 此选项用于加载指定的ICC，与前项不共存。默认为空，例值 "X:/xxx/xxxx.icm"
# icc-profile =

# [不与 --icc-* 一起使用] 当不使用ICC时，视频颜色将适应此颜色空间
# 例如99%的argb屏幕写 adobe 。90%+的p3色域屏写 display-p3 （标准srgb屏无需更改此默认值）
# target-prim = auto

# [不与 --icc-* 一起使用] 当不使用ICC时，使用指定的传输特性。一般显示器使用值 gamma2.2
# target-trc = auto

## 音视频同步模式

# 默认值 audio（与音频/系统时钟同步）通常兼容性最好但有偶尔的丢帧和重复
# 当值为 display-resample 时具有类"ReClock"作用，视频帧匹配刷新率（帧采样），自动调节音频速度补偿偏移
# video-sync = audio

# [仅当 --video-sync=display-xxxx 时生效] 默认 1
# video-sync-max-video-change = 1
# [仅当 --video-sync=display-xxxx 时生效] 减少由于视频帧率和刷新率不匹配而引起的颤动。默认 no
# interpolation = no
# [仅当 --interpolation=yes 时生效] 时间插值算法（帧混合），默认值的效果类似MADVR的smoothmotion
# tscale = oversample

## “画质”相关

# 色度还原算法。若不设定，则自动采用 --scale 的值
# cscale =

# 放大算法，默认值 lanczos （追求最快算法可用 bilinear ）
# scale = lanczos
# 缩小算法。默认值 hermite 。若设为空值，则自动采用 --scale 的值
# dscale = hermite

### 脚本 滤镜 着色器
# 以下都可选择在此处开启，即默认每次随播放器启动；或者使用"input.conf"中的方案手动选择加载

## 脚本部分
# 内置脚本开关（如果没有必要的目的，那就不要屏蔽mpv内建的功能）

# <yes|no|默认auto> 新版条件配置预设（使用旧版外挂的用户记得禁用）
# load-auto-profiles = auto

# 控制台，默认 yes
# load-osd-console = yes

# 统计信息，默认 yes
# load-stats-overlay = yes

# [使用部分同类脚本的前置条件(no)] 禁用原OSC（即内置的"osc.lua"脚本）以兼容第三方的界面样式，默认 yes
osc = no

# 网址解析增强，默认 yes
# ytdl = yes
# [当 --ytdl=yes 时有效] 将自定义的选项传递给ytdl，默认为空 https://github.com/ytdl-org/youtube-dl#options
# 示例（ cookies-from-browser=firefox ）仅为传递单个选项，多个选项最好独立追加，即写多个 --ytdl-raw-options-append 参数
# ytdl-raw-options-append = compat-option=no-certifi

# 自动挂载 /scripts/ 目录中的所有外置脚本，默认 yes。设置为no时可用下一行示例的命令加载指定的外置脚本
# load-scripts = yes
# scripts = "~~/scripts/xxxxx.lua;~~/scripts/yyyyy.lua"

## 滤镜部分

# 设定随MPV启动的音/视频滤镜的书写格式（支持多项） --af/vf=滤镜①=参数❶=值:参数❷=值,滤镜②...
# --af 和 --vf 仅能各存在一条。如果不想只使用这条参数，可以拆开写，例如使用 --vf-append 单项多次追加更多的滤镜，并不会覆盖 --vf 指定的滤镜
# 更多实用向的滤镜可参考 https://github.com/hooke007/MPV_lazy/discussions/120
# vf = vflip
# vf-append = hflip
# vf-append = format=rotate=90

## 着色器部分

# 此处的 --glsl-shaders 用于指定每次随MPV共同启动的着色器（支持多项）。具体的着色器信息参见 https://hooke007.github.io/unofficial/mpv_shaders.html
# --glsl-shaders-append 等效 --glsl-shader （注意和上行中参数的区别），表示追加着色器（单次仅能追加一项），并不会覆盖第一条 --glsl-shaders 指定的着色器，可无限追加该命令。
# 初始加载多个着色器的示例写法
# glsl-shaders = "~~/shaders/hooks_01.glsl;~~/shaders/hooks_02.glsl;~~/shaders/hooks_03.glsl"
# 下接的逐个单项 --glsl-shaders-append （或 --glsl-shader ） 会依次排列在 --glsl-shaders 之后，当然你也可以不写 --glsl-shaders 只用前二者选项的队列
# glsl-shaders-append = "~~/shaders/hooks_04.glsl"
# glsl-shaders-append = "~~/shaders/hooks_05.glsl"

### 字幕

# <no|默认exact|fuzzy|all> 自动加载当前播放文件的同名外挂字幕（fuzzy为模糊名，exact为精确名）
sub-auto = fuzzy
# 在指定的额外目录中寻找匹配的字幕。支持相对和绝对路径，默认为空
# 例值（ sub;subtitles;字幕;C:/字幕库 ）即自动搜索当前文件路径下名为"sub","subtitles","字幕"和C盘的"字幕库"文件夹内
# sub-file-paths =
# 字幕首选语言，但MPV优先加载外挂轨道，此项参数可能实际用处不大。
# 默认值为空 （尝试匹配系统语言），例值（优选中文） chs,sc,zh,chi,zho
# slang = chs,zh
# <yes|默认default|no> 现有字幕轨无法满足 --slang 的条件时是否回退选择其它字幕，值 default 表示仅选择带有“默认”标记的轨道
# subs-fallback = default

# <默认auto|none|fontconfig> 字幕字体提供程序。默认 auto 将根据系统选择不同的字体提供程序。
# none 将不使用任何字体提供程序，字幕字体只能从配置目录 `fonts` 文件夹和嵌入字体 (除非禁用了嵌入字体 embeddedfonts=no) 加载。
# fontconfig 将使用 fontconfig 作为字体提供程序，如果当前 mpv 构建不支持 fontconfig，将不使用任何字体提供程序。
# fontconfig 可以配合 auto_load_fonts 脚本实现自动加载当前文件目录下 fonts 文件夹内的字体文件
# auto_load_fonts 脚本使用说明: https://github.com/hooke007/MPV_lazy/discussions/189
# sub-font-provider = auto

## 纯文本字幕部分 —— SRT LRC

## 高级字幕部分 —— SSA ASS

## 模拟vsfilter相关

## 图形字幕部分 —— IDX SUB SUP

### 截图
